// models/index.js
'use strict'; // Often included by default

const fs = require('fs');
const path = require('path');
const Sequelize = require('sequelize');
const process = require('process');
const basename = path.basename(__filename);
const env = process.env.NODE_ENV || 'development'; // Use NODE_ENV or default to development

// --- Load database configuration ---
// Option A: Using the config/config.json generated by CLI (requires adjustment)
// const config = require(__dirname + '/../config/config.json')[env];

// Option B: Using the config/db.config.js we planned earlier (Recommended for .env integration)
const dbConfig = require(__dirname + '/../config/db.config.js'); // Make sure this file exists and reads .env
const config = { // Adapt db.config.js structure to what Sequelize constructor expects here
    username: dbConfig.USER,
    password: dbConfig.PASSWORD,
    database: dbConfig.DB,
    host: dbConfig.HOST,
    port: dbConfig.port,
    dialect: dbConfig.dialect,
    pool: dbConfig.pool,
    logging: false // Disable SQL logging unless needed for debugging
    // Add other dialect options if necessary, e.g., for SSL
};
// --- End loading configuration ---


const db = {}; // Object to hold our models and sequelize instance

let sequelize;
// Check if using configuration from config.json (usually has use_env_variable)
if (config.use_env_variable) {
  sequelize = new Sequelize(process.env[config.use_env_variable], config);
} else {
  // Use the specific credentials (Recommended setup with db.config.js)
  sequelize = new Sequelize(config.database, config.username, config.password, config);
}

// --- Load all model files from the current directory ---
fs
  .readdirSync(__dirname)
  .filter(file => {
    return (
      file.indexOf('.') !== 0 &&           // Ignore hidden files
      file !== basename &&                 // Ignore this index.js file
      file.slice(-3) === '.js' &&          // Must be a JavaScript file
      file.indexOf('.test.js') === -1    // Ignore test files
    );
  })
  .forEach(file => {
    // Import the model definition function
    const modelDefinition = require(path.join(__dirname, file));
    // Call the function to define the model
    const model = modelDefinition(sequelize, Sequelize.DataTypes);
    // Store the model in our db object
    db[model.name] = model; // Uses the model name (e.g., 'Reservation') as the key
  });

// --- Run model associations if they exist ---
Object.keys(db).forEach(modelName => {
  if (db[modelName].associate) {
    db[modelName].associate(db); // Call the associate function, passing all models
  }
});

// --- Export Sequelize instance and library ---
db.sequelize = sequelize; // Export the configured instance
db.Sequelize = Sequelize; // Export the Sequelize library itself

module.exports = db; // Export the db object containing models and instance