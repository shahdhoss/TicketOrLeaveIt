openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: The application is divided into microservice, for each microservice there is a RESTful API created, this is the User API

servers: 
  - url: http://localhost:8080/v1

paths:
  /users:
    post:
      summary: Add a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '201':
          description: User created successfully

  /users/profile-picture:
      post:
        summary: Adds a profile picture for a user
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userProfilePicture'
        responses:
          '200':
            description: User profile picture added successfully
  
      patch:
        summary: Modify the profile picture of a user
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userProfilePicture'
        responses:
          '200':
            description: User profile picture modified successfully

  /users/{id}:
    get:
      summary: Get a user by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
            
    delete:
      summary: Delete a user by id
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Deletes an user using user id


    patch:
      summary: Partially update user's info
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the user to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '204':
          description: User info updated successfully
        '404':
          description: User not found

components:
  schemas:
  
    user:
      type: object
      properties:
        first_name:
          type: string
          example: "Shahd"
        last_name:
          type: string
          example: "Hossam"
        email:
          type: string
          example: "shahd@gmail.com"
        password:
          type: string
          example: "shahdshahd"
          
    userProfilePicture:
      type: object
      properties:
        id:
          type: integer
          example: 1
        picture:
          type: string
          example: "data:image/jpeg;base64"
